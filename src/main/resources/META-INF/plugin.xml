<idea-plugin>
    <id>io.codiga.plugins.jetbrains-plugin</id>
    <name>Codiga</name>
    <vendor email="support@codiga.io" url="http://www.codiga.io">Codiga</vendor>

    <description>
        <![CDATA[
            <p>
            Code Analysis and Code Snippets on Steroids!
            </p>

            <h2>Code Analysis</h2>
            <p>
                Codiga analyzes your code in real-time and suggests fixes. Codiga uses public rules available on the
                <a href="https://app.codiga.io/hub/rulesets">hub</a>. You can also create your own code analysis rules.
            </p>
            <p>
                Use static code analysis rules from the <a href="https://app.codiga.io/hub/rulesets">Codiga Hub</a> or use
                your private rules (requires API token to be specified).
            </p>
            <h3>Quick Start</h3>
            <h4>Automatic (recommended)</h4>
            <p>
            At the root of your project, invoke the command below. It will create a codiga.yml file at the root of your project
            with the necessary rulesets for you to use.
            </p>

            <pre>
npx @codiga/cli@latest ruleset-add
            </pre>

            <p>
            You can later add more rulesets to your codiga.yml file by visiting the <a href="https://app.codiga.io/hub/rulesets">Codiga Hub</a>
            and finding more rulesets for you.
            </p>

            <h4>Manual</h4>
            <ul>
                <li>Select rulesets from the <a href="https://app.codiga.io/hub/rulesets">Codiga Hub</a> to check your code</li>
                <li>Create a codiga.yml file at the root of your project with the list of rulesets you want to use (example below)</li>
                <li>Get feedback on your code in real-time!</li>
            </ul>

            <h3>Configuration Example</h3>
            <p>
                Create a codiga.yml file at the root of your project with the following content.
            </p>
            <pre>
rulesets:
  - python-security
  - python-flask
  - python-best-practices
            </pre>

            <h2>Code Snippets</h2>
            <p>
                Search, create and share <a href="https://www.codiga.io/code-snippets/smart-code-snippets/">Smart Code Snippets</a> for 15+ languages.
            </p>

            <h3>
                Quick Start
            </h3>
            <ul>
                <li>Type a dot (just a .) in your editor to list all smart code snippets available with a shortcut</li>
                <li>Type CTRL + ALT + C to search for smart code snippets based on keywords</li>
                <li>Type CTRL + ALT + S to list all smart code snippets with a shortcuts</li>
                <li>Create public or private snippets from your IDE by selecting code, right-click and select "Create Codiga Snippet"</li>
            </ul>

            <h3>
                All features
            </h3>
            <ul>
                <li>Search for smart code snippets based on keywords (CTRL + ALT + C)</li>
                <li>List all smart code snippets with a shortcut (CTRL + ALT + S)</li>
                <li>Use a snippet directly using a shortcut in your editor (type the shortcut of the snippet, IDE fetch snippets when a dot (.) is entered)</li>
                <li>Create smart code snippets with your team (select code, right click and select "Create Codiga Snippet"</li>
                <li>Share snippets with your team</li>
            </ul>

            <h3>
                More Information
            </h3>
            <ul>
                <li><a href="https://www.codiga.io">Codiga</a></li>
                <li><a href="https://app.codiga.io/hub">Codiga Snippets Hub</a></li>
                <li><a href="https://doc.codiga.io">Codiga Documentation</a></li>
                <li><a href="https://doc.codiga.io/docs/coding-assistant/coding-assistant-jetbrains/">Plugin Configuration</a></li>
            </ul>

            <p>
                Made with ‚ù§ by developers for developers.
            </p>

        ]]>
    </description>

    <!-- please see https://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.platform</depends>
    <depends optional="true" config-file="java-features.xml">com.intellij.modules.java</depends>
    <!-- See https://plugins.jetbrains.com/docs/intellij/pycharm.html -->
    <depends optional="true" config-file="python-features.xml">com.intellij.modules.python</depends>
    <!-- YAML plugin is mandatory, because codiga.yml is parsed using this plugin. See https://plugins.jetbrains.com/plugin/13126-yaml -->
    <depends config-file="yaml-features.xml">org.jetbrains.plugins.yaml</depends>

    <extensions defaultExtensionNs="com.intellij">
        <toolWindow id="Snippet Search" secondary="true" icon="CodigaIcons.Codiga_default_icon" anchor="right"
                    factoryClass="io.codiga.plugins.jetbrains.actions.snippet_search.SnippetToolWindowFactory"/>

        <editorActionHandler action="EditorEscape"
                             implementationClass="io.codiga.plugins.jetbrains.completion.inline.EscapeHandler"
                             id="previewEscape" order="before hide-hints"/>
        <editorFactoryDocumentListener
                implementation="io.codiga.plugins.jetbrains.completion.inline.InlineDocumentListener"/>

        <postStartupActivity implementation="io.codiga.plugins.jetbrains.starter.AppStarter"/>
        <notificationGroup id="Codiga API" displayType="BALLOON"/>
        <notificationGroup id="Codiga Code Analysis" displayType="BALLOON"/>

        <applicationService
                serviceInterface="io.codiga.plugins.jetbrains.graphql.CodigaApi"
                serviceImplementation="io.codiga.plugins.jetbrains.graphql.CodigaApiImpl"
                testServiceImplementation="io.codiga.plugins.jetbrains.graphql.CodigaApiTest"/>
        <applicationService
                serviceImplementation="io.codiga.plugins.jetbrains.settings.application.AppSettingsState"/>
        <applicationConfigurable
                parentId="tools"
                instance="io.codiga.plugins.jetbrains.settings.application.AppSettingsConfigurable"
                id="com.code_inspector.settings.AppSettingsConfigurable"
                displayName="Codiga"/>

        <completion.contributor
                implementationClass="io.codiga.plugins.jetbrains.completion.shortcuts.CodigaCompletion"
                language="any"
        />
        <errorHandler implementation="io.codiga.plugins.jetbrains.errorreporter.CodigaErrorReporter"/>
        <statusBarWidgetFactory implementation="io.codiga.plugins.jetbrains.ui.StatusBar"/>
        <typedHandler implementation="io.codiga.plugins.jetbrains.cache.TypedKeyHandler"/>

    </extensions>
    <projectListeners>
        <listener class="io.codiga.plugins.jetbrains.cache.CacheRefreshEditorListener"
                  topic="com.intellij.openapi.fileEditor.FileEditorManagerListener"/>
        <listener class="io.codiga.plugins.jetbrains.actions.snippet_search.SnippetToolWindowFileEditorManagerListener"
                  topic="com.intellij.openapi.fileEditor.FileEditorManagerListener"/>
    </projectListeners>
    <actions>
        <action id="com.code_inspector.plugins.intellij.actions.AssistantListShortcuts"
                class="io.codiga.plugins.jetbrains.actions.shortcuts.AssistantListShortcutsAction"
                text="Codiga: Shortcuts" description="List all shortcuts"
                icon="CodigaIcons.Codiga_default_icon">
            <add-to-group group-id="ToolsMenu" anchor="first"/>
            <override-text place="MainMenu" text="Codiga Shortcuts"/>
            <keyboard-shortcut first-keystroke="control alt S" keymap="$default"/>
        </action>
        <action id="com.code_inspector.plugins.intellij.actions.AssistantUseRecipeAction"
                class="io.codiga.plugins.jetbrains.actions.use_recipe.AssistantUseRecipeAction"
                text="Codiga: Assistant" description="Search for Codiga suggestions"
                icon="CodigaIcons.Codiga_default_icon">
            <add-to-group group-id="ToolsMenu" anchor="first"/>
            <override-text place="MainMenu" text="Codiga Assistant"/>
            <keyboard-shortcut first-keystroke="control alt C" keymap="$default"/>
        </action>
        <action id="com.code_inspector.plugins.intellij.actions.AssistantCreateRecipeAction"
                class="io.codiga.plugins.jetbrains.actions.create_recipe.AssistantCreateRecipeAction"
                text="Create Codiga Snippet" description="Use the selected code to create a snippet"
                icon="CodigaIcons.Codiga_default_icon">

            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
            <override-text place="MainMenu" text="Codiga Assistant"/>
        </action>

        <action class="io.codiga.plugins.jetbrains.completion.inline.AcceptInlineAction"
                id="io.codiga.ApplySnippet" text="Apply Snippet">
            <keyboard-shortcut first-keystroke="TAB" keymap="$default"/>
        </action>
        <action class="io.codiga.plugins.jetbrains.completion.inline.ShowPreviousInlineCompletion"
                id="io.codiga.ShowPreviousSnippetCompletionAction" text="Show Previous Snippet">
            <keyboard-shortcut first-keystroke="alt OPEN_BRACKET" keymap="$default"/>
        </action>
        <action class="io.codiga.plugins.jetbrains.completion.inline.ShowNextInlineCompletion"
                id="io.codiga.ShowNextSnippetCompletionAction" text="Show Previous Snippet">
            <keyboard-shortcut first-keystroke="alt CLOSE_BRACKET" keymap="$default"/>
        </action>
    </actions>
</idea-plugin>